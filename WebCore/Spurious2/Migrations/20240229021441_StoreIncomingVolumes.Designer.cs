// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Spurious2.Infrastructure;


#nullable disable

namespace Spurious2.Migrations
{
    [DbContext(typeof(SpuriousContext))]
    [Migration("20240229021441_StoreIncomingVolumes")]
    partial class StoreIncomingVolumes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Spurious2.Core.Inventories.Inventory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core.Populations.PopulationIncoming", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubdivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("PopulationIncoming", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core2.Stores.Store", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("BeerVolume")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(255)");

                    b.Property<Point>("LocationGeog")
                        .IsRequired()
                        .HasColumnType("geography")
                        .HasColumnName("Location");

                    b.Property<int?>("SpiritsVolume")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WineVolume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core2.Stores.StoreIncoming", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("BeerVolume")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("LocationWellKnownText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<int?>("SpiritsVolume")
                        .HasColumnType("int");

                    b.Property<bool>("StoreDone")
                        .HasColumnType("bit");

                    b.Property<string>("StoreName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WineVolume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StoreIncoming", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core2.Subdivisions.BoundaryIncoming", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoundaryWellKnownText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Geometry>("OriginalBoundary")
                        .HasColumnType("geography");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Geometry>("ReorientedBoundary")
                        .HasColumnType("geography");

                    b.Property<string>("SubdivisionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("BoundaryIncoming", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core2.Subdivisions.Subdivision", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("AlcoholDensity")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<int>("AverageAfterTaxIncome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AverageIncome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal?>("BeerDensity")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<long>("BeerVolume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<Geometry>("Boundary")
                        .HasColumnType("geography");

                    b.Property<Point>("GeographicCentreGeog")
                        .HasColumnType("geography")
                        .HasColumnName("GeographicCentre");

                    b.Property<int>("MedianAfterTaxIncome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("MedianIncome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Population")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Province")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("SpiritsDensity")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<long>("SpiritsVolume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("SubdivisionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("WineDensity")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<long>("WineVolume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.ToTable("Subdivision", (string)null);
                });

            modelBuilder.Entity("Spurious2.Infrastructure.All.InventoryIncoming", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "StoreId");

                    b.ToTable("InventoryIncoming", (string)null);
                });

            modelBuilder.Entity("Spurious2.Infrastructure.All.ProductIncoming", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("ProductDone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductIncoming", (string)null);
                });

            modelBuilder.Entity("Spurious2.Core.Inventories.Inventory", b =>
                {
                    b.HasOne("Spurious2.Core.Products.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Inventory_Product");

                    b.HasOne("Spurious2.Core2.Stores.Store", "Store")
                        .WithMany("Inventories")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Inventory_Store");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Spurious2.Core.Products.Product", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Spurious2.Core2.Stores.Store", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
